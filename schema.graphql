type Query {
  artists(filter: String): [Artist!]!
  artist(id: Int!): Artist
  album(id: Int!): Album
  playlist(id: Int!): Playlist
  user: User
  albums(filter: String): [Album!]!
  tracks(filter: String): [Track!]!
  playlists(filter: String): [Playlist!]!
}

type Artist {
  id: Int!
  name: String!
  description: String
  albums: [Album!]!
  tracks: [Track!]!
  userStars: Boolean
}

type Album {
  id: Int!
  title: String
  year: Int
  artist: Artist
  tracks: [Track!]!
  color: String
}

type Track {
  id: Int!
  title: String
  duration: Int
  artist: Artist!
  album: Album!
}

type Mutation {
  signup(email: String!, password: String!, name: String!): User
  login(email: String!, password: String!): User
  logout: String
  createPlaylist: Playlist
  addToPlaylist(playlistId: Int!, trackId: Int!): String
  addStar(id: Int!): String
  removeStar(id: Int!): String
}

type User {
  id: Int!
  name: String!
  email: String!
  playlists: [Playlist!]!
  stars: [Artist!]!
}

type Playlist {
  id: Int!
  title: String!
  tracks: [PlaylistTrack!]!
  createdBy: User
}

type PlaylistTrack {
  track: Track!
  assignedAt: String
}
