type Query {
  artists(filter: String): [Artist!]!
  artist(id: Int!): Artist
  playlist(id: Int!): Playlist
  user(name: String!): User
  albums(filter: String): [Album!]!
  tracks(filter: String): [Track!]!
}

type Artist {
  id: ID!
  name: String!
  albums: [Album!]!
  tracks: [Track!]!
}

type Album {
  id: ID
  title: String
  year: Int
  tracks: [Track!]!
}

type Track {
  id: ID
  title: String
  duration: Int
  artist: Artist!
  album: Album!
}

type Mutation {
  signup(email: String!, password: String!, name: String!): AuthPayload
  login(email: String!, password: String!): AuthPayload
  createPlaylist(title: String): Playlist
}

type AuthPayload {
  token: String
  user: User
}

type User {
  id: ID!
  name: String!
  email: String!
  playlists: [Playlist!]!
}

type Playlist {
  id: ID!
  title: String!
  tracks: [Track!]!
  createdBy: User
}
